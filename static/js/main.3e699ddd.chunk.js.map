{"version":3,"sources":["Components/Pokedex.jsx","App.js","index.js"],"names":["Pokedex","name","image","index","type","weight","height","ability","style","className","src","alt","map","el","id","App","useState","pokemon","setPokemon","search","setSearch","fetchPokemon","a","axios","get","data","createPokemon","result","forEach","res","current","results","useEffect","placeholder","value","onChange","e","target","filter","toLowerCase","includes","sprites","other","dream_world","front_default","types","abilities","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAuBeA,EArBC,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,KAAMC,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,OAAOC,EAAc,EAAdA,QAClDC,EAAK,eAAWJ,GACtB,OACI,qBAAKK,UAAU,YAAf,SACI,sBAAKA,UAAWD,EAAhB,UACI,sBAAKC,UAAU,QAAf,UACA,qBAAKC,IAAKR,EAAOS,IAAKV,IACtB,qBAAKQ,UAAU,OAAf,SAAuBR,OAEvB,sBAAKQ,UAAU,OAAf,UACKN,EAAM,GAAN,aAAeA,GAAf,YAA4BA,GAC7B,yCAAYC,EAAK,GAAGA,KAAKH,QACzB,0CAAaI,KACb,0CAAaC,KACb,2CAAcC,EAAQK,KAAI,SAACC,EAAGC,GAAJ,OAAU,iCAAgBD,EAAGN,QAAQN,KAA3B,OAAWa,MAA/C,oBC6CLC,EAzDH,WACV,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAY,uCAAG,8BAAAC,EAAA,sEACAC,IAAMC,IAAN,+CADA,OACbC,EADa,OAIbC,EAAgB,SAACC,GACrBA,EAAOC,QAAP,uCAAe,WAAOf,GAAP,eAAAS,EAAA,sEACKC,IAAMC,IAAN,4CAA+CX,EAAGZ,OADvD,OACP4B,EADO,OAGbX,GAAW,SAAAY,GAAO,4BAAQA,GAAR,CAAiBD,EAAIJ,UAH1B,2CAAf,wDAMFC,EAAcD,EAAKA,KAAKM,SAXL,2CAAH,qDAclBC,qBAAU,WACRX,MACC,IAMH,OACE,sBAAKP,GAAG,OAAR,UACE,sBAAKL,UAAU,SAAf,UACE,yCACA,uBAAOL,KAAK,OAAO6B,YAAY,oBAAoBC,MAAOf,EAAQgB,SAPnD,SAACC,GACpBhB,EAAUgB,EAAEC,OAAOH,aAQjB,qBAAKzB,UAAU,UAAf,SACGQ,EAAQqB,QAAO,SAAAzB,GACd,OAAIA,EAAGZ,KAAKsC,cAAcC,SAASrB,EAAOoB,eACjC1B,EACA,QACRD,KAAI,SAACC,GACN,OACE,cAAC,EAAD,CACEV,MAAOU,EAAGC,GACVb,KAAMY,EAAGZ,KACTC,MAAOW,EAAG4B,QAAQC,MAAMC,YAAYC,cAEpCxC,KAAMS,EAAGgC,MACTxC,OAAQQ,EAAGR,OACXC,OAAQO,EAAGP,OACXC,QAASM,EAAGiC,WAJPjC,EAAGZ,eCzCtB8C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3e699ddd.chunk.js","sourcesContent":["import React from 'react'\r\nimport './pokedex.css'\r\nconst Pokedex = ({ name, image, index, type, weight, height,ability }) => {\r\n    const style = `card ${type}`\r\n    return (\r\n        <div className=\"container\">\r\n            <div className={style}>\r\n                <div className=\"front\">\r\n                <img src={image} alt={name}/>\r\n                <div className='name'>{name}</div>\r\n                </div>\r\n                <div className=\"back\">\r\n                    {index<10?`#00${index}`:`#0${index}`}\r\n                    <div>Type: {type[0].type.name}</div>\r\n                    <div>Weight:{weight}</div>\r\n                    <div>Height:{height}</div>\r\n                    <div>Ability:{ability.map((el,id)=>(<span key={id}>{el.ability.name}, </span>))}etc..</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pokedex\r\n","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport './App.css'\nimport Pokedex from './Components/Pokedex'\nconst App = () => {\n  const [pokemon, setPokemon] = useState([])\n  const [search, setSearch] = useState('')\n\n  const fetchPokemon = async () => {\n    const data = await axios.get(`https://pokeapi.co/api/v2/pokemon?limit=151`)\n\n    // console.log(data.data)\n    const createPokemon = (result) => {\n      result.forEach(async (el) => {\n        const res = await axios.get(`https://pokeapi.co/api/v2/pokemon/${el.name}`)\n        \n        setPokemon(current => [...current, res.data])\n      })\n    }\n    createPokemon(data.data.results)\n\n  }\n  useEffect(() => {\n    fetchPokemon()\n  }, [])\n\n\n  const handleChange = (e) => {\n    setSearch(e.target.value)\n  }\n  return (\n    <div id='main'>\n      <div className='header'>\n        <h1>Pokedex</h1>\n        <input type=\"text\" placeholder='Search Pokemon...' value={search} onChange={handleChange} />\n      </div>\n      <div className=\"pokemon\">\n        {pokemon.filter(el => {\n          if (el.name.toLowerCase().includes(search.toLowerCase()))\n            return el\n            return null\n        }).map((el) => {\n          return (\n            <Pokedex\n              index={el.id}\n              name={el.name}\n              image={el.sprites.other.dream_world.front_default}\n              key={el.name}\n              type={el.types}\n              weight={el.weight}\n              height={el.height}\n              ability={el.abilities}\n            // stype={el.types[1].type.name}\n            />\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}